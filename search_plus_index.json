{"./":{"url":"./","title":"关于本书","keywords":"","body":" Ranorex User Guide 中文版 Ranorex User Guide 中文版 Ranorex 维基介绍 &#x1F449; Ranorex Studio Ranorex 用户手册官方地址 &#x1F449; Ranorex User Guide 我的站点 &#x1F449; TaylorTaurus's Site，或是点击左上角跳转 我的博客 &#x1F449; TaylorTaurus's Blog 项目地址点击右上角章鱼猫图标跳转，多多Star，多多Fork Ranorex Studio 各版本百度云分流下载 &#x1F449; Ranorex Stuido Download Hosted by Coding Pages © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/":{"url":"Ranorex Studio fundamentals/","title":"Ranorex Studio 基础教程","keywords":"","body":"[译] Ranorex Studio 基础教程[译] Ranorex Studio 基础教程 原文地址 &#x1F449; Ranorex Studio fundamentals @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Ranorize yourself in 20 minutes/":{"url":"Ranorex Studio fundamentals/Ranorize yourself in 20 minutes/","title":"在20分钟内了解 Ranorex","keywords":"","body":"[译] 在20分钟内了解 Ranorex[译] 在20分钟内了解 Ranorex 原文地址 &#x1F449; Ranorize yourself in 20 minutes @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Ranorex Studio/":{"url":"Ranorex Studio fundamentals/Ranorex Studio/","title":"Ranorex Studio","keywords":"","body":"[译] Ranorex Studio[译] Ranorex Studio 原文地址 &#x1F449; Ranorex Studio @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Ranorex Recorder/":{"url":"Ranorex Studio fundamentals/Ranorex Recorder/","title":"Ranorex 录制器","keywords":"","body":"[译] Ranorex 录制器[译] Ranorex 录制器 原文地址 &#x1F449; Ranorex Recorder @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Test suite/":{"url":"Ranorex Studio fundamentals/Test suite/","title":"测试套件","keywords":"","body":"[译] 测试套件[译] 测试套件 原文地址 &#x1F449; Test suite @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Actions/":{"url":"Ranorex Studio fundamentals/Actions/","title":"动作","keywords":"","body":"[译] 动作[译] 动作 原文地址 &#x1F449; Actions @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Repository/":{"url":"Ranorex Studio fundamentals/Repository/","title":"控件库","keywords":"","body":"[译] 控件库[译] 控件库 原文地址 &#x1F449; Repository @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Test validation/":{"url":"Ranorex Studio fundamentals/Test validation/","title":"测试验证","keywords":"","body":"[译] 测试验证[译] 测试验证 原文地址 &#x1F449; Test validation @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Whitelisting/":{"url":"Ranorex Studio fundamentals/Whitelisting/","title":"白名单","keywords":"","body":"[译] 白名单[译] 白名单 原文地址 &#x1F449; Whitelisting @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio fundamentals/Reporting/":{"url":"Ranorex Studio fundamentals/Reporting/","title":"报告","keywords":"","body":"[译] 报告[译] 报告 原文地址 &#x1F449; Reporting @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/":{"url":"Ranorex Studio advanced/","title":"Ranorex Studio 高级教程","keywords":"","body":"[译]Ranorex Studio 高级教程[译]Ranorex Studio 高级教程 原文地址 &#x1F449; Ranorex Studio advanced @ translator : TaylorTaurus♋ translate time : 2018-7-5♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Data-driven testing/":{"url":"Ranorex Studio advanced/Data-driven testing/","title":"数据驱动测试","keywords":"","body":"数据驱动测试数据驱动测试 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Variables & parameter/":{"url":"Ranorex Studio advanced/Variables & parameter/","title":"变量和参数","keywords":"","body":"变量和参数变量和参数 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Tracking UI-elements/":{"url":"Ranorex Studio advanced/Tracking UI-elements/","title":"跟踪UI元素","keywords":"","body":"跟踪UI元素跟踪UI元素 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Spy/":{"url":"Ranorex Studio advanced/Ranorex Spy/","title":"Ranorex Spy","keywords":"","body":"Ranorex SpyRanorex Spy © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/UI-elements/":{"url":"Ranorex Studio advanced/UI-elements/","title":"UI元素","keywords":"","body":"UI元素UI元素 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/RanoreXPath/":{"url":"Ranorex Studio advanced/RanoreXPath/","title":"RanoreXPath","keywords":"","body":"[译] RanorexXPath必要的知识[译] RanorexXPath 原文地址 &#x1F449; RanorexXPath @ translator : TaylorTaurus♋ translate time : 2018-7-6♋ update time : 2018-7-6 RanoreXPath表达式主要用于唯一标识桌面、Web或移动应用程序中的UI元素。语法使用XML描述语法W3C XPath。换句话说，RanoreXPath是XPath的一个子集，具有必要的选定扩展名。 每个UI元素都可以用唯一的RanoreXPath描述。RanoreXPath用于描述、搜索、识别和查找应用程序中的UI元素。创建和编辑RanoreXPath的工具是路径编辑器和Ranorex Spy，它们分别在单独的章节中介绍。 必要的知识 要了解RanoreXPath的概念，我们建议您阅读： 扩展阅读在 > Ranorex Studio advanced > UI元素章节中⇢详细介绍和解释了UI元素，适配器，功能和属性及其值的概念。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/RanoreXPath/[译]RanoreXPath蓝图.html":{"url":"Ranorex Studio advanced/RanoreXPath/[译]RanoreXPath蓝图.html","title":"RanoreXPath 蓝图","keywords":"","body":"[译] RanorexXPath 蓝图前言UI元素描述轴角色（节点）属性/值对（谓词）RanoreXPath结构基本概念RanoreXPath示例介绍结果：RanoreXPath特性重点：结果：RanoreXPath健壮性示例定义结果：详细的RanoreXPath格式总结：通配符当前示例总结[译] RanorexXPath 蓝图 原文地址 &#x1F449; RanoreXPath blueprint @ translator : TaylorTaurus♋ translate time : 2018-7-6♋ update time : 2018-7-9 本章的目的是介绍和解释RanoreXPath的基本语法及其与Ranorex自动化测试的应用。本章的目标读者是对XPath或RanoreXPath知之甚少或根本不了解的初学者。本章概述了基础知识的基本概念。 前言 RanoreXPath格式建立在W3C XPath语言格式之上。基本上，RanoreXPath是XPath格式的一个子集，并且在某些主题中，RanoreXPath扩展了XPath。与任何其他数学语法一样，RanoreXPath实现定义（扩展）语法和缩写语法。 虽然高级和有经验的用户通常使用缩写语法表示法，但这个介绍性章节主要使用定义和扩展的语言表示法。我们建议从本章开始学习RanoreXPath语法。当您取得进步并获得经验时，您可能会发现自己会自动应用缩写语言符号。 在必要和有用的情况下，我们提供语法选项和可能的缩写。 UI元素描述 本节介绍和解释使用RanoreXPath表示法描述单个UI元素。 使用RanorexXPath指定一个按钮 基本的RanoreXPath元素： 一个基本的RanoreXPath包含三个元素-一个轴说明符、一个节点、零个或多个谓词来唯一标识和描述UI元素。 RanoreXPath 使用角色按钮和谓词来描述演示应用程序的退出按钮，该谓词由唯一标识按钮的属性--值对组成 轴 轴说明符指示UI元素的树表示中的导航方向。轴说明符的例子是/，/，.. 、祖先等。稍后将在本节中更详细地描述它们。 角色（节点） 正式的XPath语法将此格式部分定义为节点，而在Ranorex中，这称为角色（又称适配器类型） Ranorex使用引用的UI元素的角色作为RanoreXPath表示法中的主要描述标头 如果需要谓词来指定UI元素，则它嵌套在[]中 属性/值对（谓词） 属性值对可选地用于标识和描述XPath表示法中的UI元素 如有必要，可以组合两个或多个属性 - 值对以形成谓词 使用前面的@引入属性是一种约定 因此，属性值语法可能相当复杂 @attribute ='value' 是常见的惯例 属性--值对不仅应用 = 操作符。其他操作符将在后面介绍和解释 属性--值对不是标识UI元素的唯一选项。谓词可以由相当复杂的数学结构形成 注意：Ranorex自动选择可用属性列表中最合适的属性--值对，以识别和描述UI元素。最合适的是指选择具有最高权重的属性--可由用户更改的属性。因此，可以影响UI元素的自动识别。 扩展阅读 在Ranorex Studio专家中介绍并解释了通过改变路径权重来映射动态UI元素的专家主题 RanoreXPath结构 本节介绍RanoreXPath的组成，以完全唯一地描述被测应用程序的GUI中的UI元素。 因此，RanoreXPath描述了Ranorex的抽象树表示中UI元素的位置。 基本概念 RanoreXPath结构的基本概念是简单地将UI元素描述链接在一起。 RanoreXPath结构 根元素： 定义当前UI元素树的根，即RanoreXPath格式的开头。 路径： 从根到节点：可选（零个或多个）分支元素，用于定义从根元素到指定节点元素的路径 节点元素： 一个或多个UI元素，由当前的RanoreXPath格式标识 RanoreXPath示例介绍 假设前一部分的示例--已在RanoreXPath语法中跟踪和描述了退出按钮。 RanoreXPath示例 跟踪演示应用程序的退出 请参阅Ranorex自动生成的RanoreXPath格式 Ranorex Spy中的RanoreXPath示例 查看UI元素树浏览器，其中UI元素以树状数据结构组织。 根元素是演示应用程序的程序窗口（=form） 它的控制名被定义为：RxMainFrame 节点元素时退出按钮 它的控制名被定义为：RxButtonExit 没有额外的路径元素 请参阅路径编辑器的RanoreXPath元素。 它们以分层形式表示RanoreXPath元素 结果： 退出按钮的最终RanoreXPath格式如下所示： RanoreXPath格式示例结果 RanoreXPath特性 有两种主要方法可以使用和应用RanoreXPath格式。 RanoreXPath主要应用 RanoreXPath描述UI元素的目的可以是识别单个UI元素也可以基于定义的分组特征识别一组UI元素。 重点： 独立于应用目的，RanoreXPath格式始终是： RanoreXPath原则 结果： 细节级别与灵活性对健壮性和执行速度有影响 一个非常详细的RanoreXPath导致声明不太健壮，但可能会加快执行时间 非常灵活的RanoreXPath变得更加强大，可以免受GUI架构的变化影响，在处理过程中变得更加耗时 RanoreXPath健壮性 Ranorex的一个突出特点是其针对图形用户界面中的动态变化的测试用例的稳健性。这种稳健性源于RanoreXPath定义的最大灵活性。 RanoreXPath格式的自动生成试图在细节和灵活性之间找到一个很好的折衷方案。 这通常是通过尝试在路径格式中包含合适的容器元素来实现的。 基本理念是基于通配符运算符。 示例定义 RanoreXPath健壮性示例定义 使用Spy的Track功能 并在演示应用程序中跟踪测试数据库的Female单选按钮 结果： 使用RanoreXPath，UI元素树浏览器和路径编辑器的项目树视图查看Ranorex Spy中的跟踪结果。 RanoreXPath健壮性示例结果 RanoreXPath格式： 请参阅RanoreXPath格式及其组件，并将它们与Spy和路径编辑器中的视图进行比较。 Spy中的UI元素树浏览器视图 请参阅演示应用程序GUI的UI元素 在UI元素树中构造了5个不同的UI元素 路径编辑器 请参阅路径编辑器树视图中的RanoreXPath项 从根到节点元素有7个RanoreXPath项 它们共同构成了RanoreXPath格式 详细的RanoreXPath格式 让我们仔细看看自动生成的RanoreXPath格式： 利用通配符使RanoreXPath健壮 根元素 RxMainFrame: 此UI元素表示被测应用程序（即演示应用程序）的程序窗口，是RanoreXPath规范的固定部分。 通配符： 为使RanoreXPath格式尽可能灵活，Ranorex插入两个通配符 /?（可选）直到下一个固定的RanoreXPath标签项目。 固定： RanoreXPath项目 RxTabStandardRanorex将此UI元素分类为RanoreXPathg格式的必要固定部分，以便能够稳健地识别节点UI元素。 通配符： 接下来的两个RanoreXPath项再次使用 /？ 通配符，以增加UI元素识别的灵活性。 最后，节点元素 rdbFemale 是RanoreXPath格式的最终固定部分，用于成功且稳健的UI元素识别。 总结： 对于通配符，即使底层GUI结构发生变化，Ranorex也能够无疑地识别UI元素 在当前示例中，Ranorex指定具有三（3）个固定UI元素的路径，这些元素对于单选按钮的UI元素标识是必不可少的 四(4)通配符为GUI更改提供了一种方法，并且不管这些变化如何，它们都是一个健壮的标识。 有三种不同的通配符运算符，将在下一节中介绍 通配符 RanoreXPath规范的灵活性基于通配符。 区分三种不同的通配符运算符： 通配符 含义 描述 /* 任意一个 任何UI元素，恰好是一（1）个树级别 /? 任意一个可选 任何UI元素，正好是零（0）或一（1）树级别 // 任意一个后代 任意数量的树级别的任何UI元素 当前示例总结 参考当前示例，让我们看一下通配符实现。 测试示例中通配符的应用 可以看到UI元素 RxTabControl 被两个 /?/? 通配符替代。这就意味着下一个固定的RanoreXPath项目可以直接在UI元素的根级别或是一（1）、二（2）级别下定义，不用再进一步指定级别。 可以看到UI元素 grpGender 被两个 /?/? 通配符替代。这就意味着下一个固定的RanoreXPath项目可以直接在UI元素的根级别或是一（1）、二（2）级别下定义，不用再进一步指定级别。 因此，存在高达四（4）个级别的灵活性并且级别未进一步指定，这为GUI结构和内容的重大变化提供了空间。目标UI元素基于两个固定路径部分及其属性controlname找到。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/RanoreXPath/[译]RanoreXPath语法示例.html":{"url":"Ranorex Studio advanced/RanoreXPath/[译]RanoreXPath语法示例.html","title":"RanoreXPath 语法示例","keywords":"","body":"[译] RanorexXPath 语法示例测试示例定义Ranorex演示应用程序简单按钮识别RanoreXPath规范的一般化用户定义的标识属性/？（任何可选的）通配符示例结果RanoreXPath解释://（任何后代）通配符示例结果RanoreXPath解释:/ *(任何)通配符的例子结果RanoreXPath解释:缩小RanoreXPath规范通用RanoreXPath规范缩小RanoreXPath规范 - 第一部分缩小RanoreXPath规范 - 第二部分缩小结果:在RanoreXPath规范中选择UI元素选择结果：树元素规范结果子树项目规范结果：树的兄弟姐妹的规格表项目规范基本表格方向测试定义绝对单元格位置规范缺少对表格单元格更改的稳健性单元格内容规格缩小范围的单元格规范相对单元格位置规范[译] RanorexXPath 语法示例 原文地址 &#x1F449; RanoreXPath syntax examples @ translator : TaylorTaurus♋ translate time : 2018-7-9♋ update time : 2018-7-9 本章介绍了许多RanoreXPath语法示例，以加深您对在测试环境中应用强大的RanoreXPath规范的理解。 测试示例定义 所有RanoreXPath解释示例都是使用Ranorex演示应用程序创建的。本文提供的大多数示例都是使用演示应用程序的UI元素测试区域完成的。 Ranorex演示应用程序-UI元素测试区域 Ranorex 演示应用程序的UI元素测试区域 Ranorex演示应用程序 可以按照以下显示的链接下载演示应用程序。 下载文件，解压缩并启动演示应用程序。 下载主题：Ranorex 演示应用程序时间：小于10min点我下载 简单按钮识别 本节介绍如何识别用户界面的简单按钮并分析相应的RanoreXPath规范。 简单按钮识别 有关演示应用程序的 退出 按钮，请参阅RanoreXPath规范 树浏览器显示 退出 按钮是根UI元素 RxMainFrame 的直接子节点 使用 controlname 识别 退出 按钮 Spy状态信息（左下角窗口）确认找到一个UI元素 RanoreXPath规范的一般化 由于退出按钮是演示应用程序当前GUI层中的唯一按钮，因此可以概括RanoreXPath规范而不会丢失按钮的跟踪。如何做到请看下述。 RanoreXPath规范的一般化 请查看一般化的RanoreXPath规范，只使用了角色 button 和移除了谓词规范 树浏览器仍然将UI元素退出按钮显示为根元素的直接子元素 路径编辑器树视图显示了通用的RanoreXPath规范 尽管如此，一个UI元素(即退出按钮)还是被标识出来了 注意此示例成功，因为在指定级别上只有一个按钮。如果添加了一个额外的按钮，当前示例将无法跟踪和标识一个按钮。 用户定义的标识属性 Ranorex自动选择识别属性。 这个选择可以随意改变。 以下是如何选择用户定义的标识属性。 用户定义的标识属性 在路径编辑器中查看选择的属性值键值对 controltext='Exit' 谓词已添加到RanoreXPath规范中 它也显示在路径编辑的树视图中 结果，仍然会识别“退出”按钮 提示Spy状态行显示RanoreXPath规范是否唯一，以及是否使用当前RanoreXPath规范标识了多少UI元素。 /？（任何可选的）通配符示例 通配符为RanoreXPath规范增加了灵活性和健壮性。UI元素的识别对图形用户界面的结构变化更加具有抵抗力。目标是设计一个ui元素标识(理想情况下是独立于底层GUI结构的)。 注意记住前一节中的通配符定义: 通配符 含义 描述 /* 任意一个 任何UI元素，恰好是一（1）个树级别 /? 任意一个可选 任何UI元素，正好是零（0）或一（1）树级别 // 任意一个后代 任意数量的树级别的任何UI元素 '任何'通配符示例 跟踪演示应用程序的UI元素测试区域的窗格 结果 结果可以在Spy树浏览器和路径编辑器中看到。 Spy树浏览器和'/？'示例的路径编辑器 根元素表示RanoreXPath规范的开头 中间的UI元素`TabPageList 被两个 /? 通配符使路径规范健壮。即使 TabPage 元素向下或向上移动一级，该路径仍然有效 节点UI元素是RanoreXPath规范的目标UI元素，并通过其角色和 controlname 属性定义 RanoreXPath解释: RanoreXPath规范通配符/?示例 目标元素3是根元素1的后代元素，其中最多有两个（0,1或2）非必需指定的UI元素2 //（任何后代）通配符示例 通常需要在GUI中查找和跟踪元素，我们不知道元素的“深度”。因此，“所有路径后代”运算符允许搜索元素的“所有”后代级别以跟踪特定的UI元素。如何做到请看下述。 使用//（任何后代）通配符的RanoreXPath规范示例 参见演示应用程序程序窗口，它的角色 /form 指定为RanoreXPath规范的根元素 通配符运算符指定下面任何级别的任何元素 目标UI元素仅限于角色 radiobutton，即搜索根元素内和以下级别的任何单选按钮 结果 结果可以在Ranorex Spy中看到。 //（任何后代）通配符的查找结果 请参阅Spy的路径编辑器，其中RanoreXPath规范显示为树元素 UI元素树浏览器显示所有找到的UI元素，即两个不同级别的7个单选按钮（级别3和级别4） Spy左下角的状态信息确认了7个找到的单选按钮 RanoreXPath解释: 搜索并识别根元素 1中和下级 2的任一单选按钮 3。 / *(任何)通配符的例子 如果要查找具有完全已知“深度”的UI元素，则可以使用“任何”通配符运算符作为您选择的工具。 请参阅其应用程序的简单示例。 具有/ （任意）通配符的RanoreXPath规范* 演示应用程序的程序窗口作为RanoreXPath规范的根元素 三个/(任意)*通配符操作符在根元素的下级三层搜索元素 节点元素是角色为 radiobutton 的规范 结果 搜索和识别结果可以在Ranorex Spy中看到： 搜索结果为/ （任意）通配符运算符* 请参阅具有树状结构的RanoreXPath规范元素的路径编辑器。每个通配符运算符代表根元素下面的一个搜索级别 查看UI元素树浏览器，其中包含五（5）个角色 radiobutton 的UI元素，从根元素向下精确三（3）个级别 左下角状态行确认了5个找到的UI元素 RanoreXPath解释: 搜索并识别在根元素 1 下方正好三个等级 2 的任何单选按钮 3 缩小RanoreXPath规范 在许多情况下，有必要将一般RanoreXPath规范缩小到更具体的规范，以便在GUI中查找和识别所选择的UI元素。这里介绍了缩小RanoreXPath规范的最常用方法。 通用RanoreXPath规范 让我们开始跟踪和识别演示应用程序的UI元素测试区域窗格中的所有按钮 启动Spy和演示应用程序并指定RanoreXPath，如下所示： 初始通用RanoreXPath规范的示例 以树状形式查看具有RanoreXPath规范的所有元素的路径编辑器，搜索UI元素测试区域窗格中和下方的任何按钮 请在UI元素树浏览器查看，在演示应用程序中找到的17个按钮 左下方的状态消息确认了17个找到的按钮 缩小RanoreXPath规范 - 第一部分 在第一步中，RanoreXPath规范被缩小到“可见”按钮，即在GUI中未隐藏的按钮。 使用谓词更改RanoreXPath规范，如下所示： 缩小RanoreXPath规范的示例 - 第一部分 看到路径编辑器，其中节点元素使用属性 visible ='True' 进一步指定 看到UI元素树浏览器，其中包含基于当前RanoreXPath规范找到的15个结果按钮 左下方状态信息确认找到了15个按钮 缩小RanoreXPath规范 - 第二部分 如果缩小RanoreXPath规范是不够的，则通过组合属性继续缩小，因为谓词可能是一种解决方案。查看下述这是怎么做的。 将下面列出的属性规范添加到当前RanoreXPath定义的谓词中。 缩小RanoreXPath规范的例子 - 第二部分 看到缩小的RanoreXPath规范，并将第二个属性/值对作为谓词。 搜索设置为所有可见按钮... 有一个以字母 btn 开头的controlname属性 看到UI元素树浏览器，其中包含两个与RanoreXPath搜索规范相关的UI元素 左下角的状态信息确认了两个找到的UI元素 提示 > 运算符是可以在RanoreXpath规范中使用的几个不同运算符之一。 缩小结果: 缩小的RanoreXPath规范的搜索结果可以在下面显示的图像中看到 - “UI元素测试区域”窗格中的两个按钮被识别为匹配UI元素。 缩小的RanoreXPath搜索结果示例 在RanoreXPath规范中选择UI元素 可以使用RanoreXPath语法的元素选择运算符直接选择一组跟踪和标识元素中的单个元素。下述介绍如何做到这一点。 将下面列出的RanoreXPath规范插入到当前示例中 在RanoreXPath规范中选择元素的示例 看到路径编辑器，将选择 [2] 运算符添加到谓词中，从当前RanoreXPath规范标识的元素列表中选择第二个元素 看到UI元素树浏览器，将第二个UI元素标识为RanoreXPath规范的搜索结果 在左下角的Spy状态信息中看到搜索结果的确认 选择结果： 选择结果是“UI元素测试区域”窗格的两个已识别按钮中的第二个： RanoreXPath选择结果 提示排序顺序就是UI元素在元素树中出现的顺序。该顺序是前面的谓词定义的结果，并且可能与UI元素命名没有任何共同之处（即“按钮1”）。 树元素规范 本节介绍和解释树元素的跟踪和识别。 使用Ranorex Spy跟踪树UI元素 单击Ranorex Spy的Track按钮并跟踪 演示应用程序中UI元素测试区域的树元素 结果 Ranorex将树元素标识如下： 使用Ranorex识别树元素 看到在网页和移动测试中树项目的追踪结果的RanoreXPath规范 Ranorex插入两个“任意可选”通配符（/?/?），为跟踪结果添加路径稳健性和灵活性 网页和移动测试树项被识别为树的后代。如果树项在树的一个或两个级别之内和之下，则路径灵活性允许成功识别 子树项目规范 通过指定任何顶部节点的树节点来揭示在树内跟踪和识别树项的概念。 使用Ranorex Spy跟踪子树UI元素 使用Ranorex Spy的Track按钮 跟踪演示应用程序的UI元素测试区域中的子树项目端点 结果： Ranorex识别子树项目如下： 使用Ranorex Spy识别子树元素 看到的RanoreXPath规范，并将子树项Endpoints标识为普通树项 Ranorex将树保留为RanoreXPath规范的祖先元素 所有子树项都被标识为简单树项，通过任何后代通配符运算符独立于它们在树中的位置 看到子树项被标识为规则树项，以及使用 accessiblename 作为谓词 注意Ranorex将所有子树项视为常规树项，并通过唯一谓词规范来标识它们。树中的位置并不重要，因此，树结构的变化不会改变识别成功。 树的兄弟姐妹的规格 通过轴说明符对RanoreXPath规范进行简单修改，可以跟踪和识别当前树项的下一个和前一个兄弟树项。 将轴说明符应用于RanoreXPath规范 看到RanoreXPath规范，添加的轴说明符跟踪以下树项同级 路径编辑器以树状结构显示RanroeXPath规范 UI元素树浏览器显示标识结果，移动测试树项作为端点树项的下一个兄弟树项 识别兄弟树项目 查看正在测试的应用程序的UI元素测试区域，其中树元素移动测试显示为端点树项目的兄弟元素 注意如果存在多个兄弟元素，则轴指定符号 follow -sibling 返回所有后级的兄弟元素。。 表项目规范 跟踪和识别表中的元素是一种高级规范方法，并且需要一些在此引入和解释的基本知识。 基本表格方向 表格单元的寻址遵循一个重要的理解系统，并在下图中显示。 基本表格方向 重点： 表列由其标题名称标识 表行已编号，在标题下方的第一行中以“0”开头 表格单元格通常由列名称和行号组合标识 绝对单元格规范的示例：单元格“Thomas”由列名和行号组合绝对指定 相对单元格规范的示例：单元格“Development”被相对指定为通过一个轴说明符 /..绝对指定一个锚单元格之后的第6个单元格。 测试定义 当前测试示例的目的是在演示应用程序的UI元素测试区域的表中唯一地标识名为Thomas Bach的人的年龄。 表格单元规范 - 测试定义 看到表格条目（行），其中包含名字，姓氏，年龄，性别和部门从属关系 托马斯巴赫的年龄将通过RanoreXPath规范强有力地选择 绝对单元格位置规范 在第一个简单的方法中，具有'Thomas Bach'人名的单元格可以通过单元格绝对位置来识别： 绝对表格单元规范 看到使用表单元格绝对指定的RanoreXPath规范 RanoreXPath规范引用“FirstName”列中的单元格和行号3 - 在我们当前的例子中 - 包含托马斯这个名字 看到Spy的树形浏览器视图中标识的UI元素 缺少对表格单元格更改的稳健性 绝对单元规范缺乏对表格单元布置的改变的鲁棒性。 表单元格移动 移动表格单元的排列显示... 绝对单元格导致错误的结果，因为规范依赖于单元格位置而不是期望的单元格内容 单元格内容规格 单元格位置规格的改进是单元格内容的规范，其中我们基于其内容识别单元格 单元格内容规范 指定单元格内容可以增强对表重组的稳健性，但是... 导致识别具有指定内容的所有单元格，与列无关 缩小范围的单元格规范 还需要将单元格规范限制为名字'Thomas'（和姓氏'Bach'）。这是通过缩小的单元规范来完成的。 缩小范围的单元格规范 看到缩小的单元格规范，其中两个属性构成RanoreXPath谓词... 结果，是当前示例的唯一标识的单元格 提示可能有必要通过附加属性和/或其他轴指定符进一步指定单元格，以便唯一地指定定义的单元格。在当前示例中，两个属性就足够了。 相对单元格位置规范 最后，为了指定名为“Thomas Bach”的人的年龄的单元格，需要相对单元格规范。 相对单元格规范 使用单元格的accessname属性“Age”来相对指定识别单元格 表中行为“Thomas Bach”的年龄为42 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Image-based automation/":{"url":"Ranorex Studio advanced/Image-based automation/","title":"基于图像的自动化","keywords":"","body":"[译]基于图像的自动化--介绍解决方案示例安装打开/关闭基于图像的自动化为什么基于图像的自动化？实例准备基于文本的录制[译]基于图像的自动化--介绍 原文地址 &#x1F449; Image-based automation @translator : TaylorTaurustranslate time : 2018-7-5 自动化软件测试通常基于对用户界面元素(ui元素)的识别。它们中的许多可以根据文本进行识别。 另外，测试自动化还需要识别像素图像而不是文本。基于图像的自动化是一种很好的识别、检测和应用ui元素的方法。本文介绍并解释了使用这种方法所需要的一切。 本章节有如下内容： 解决方案示例 开启/关闭基于图像的自动化 为什么需要基于图像的自动化 解决方案示例 本文介绍的概念放在一个示例解决方案中，可以下载。我们邀请您使用示例解决方案进行实验，并提升您的认知。 训练！你可以做什么？主题：基于图像的自动化时间：少于30分钟点我下载示例文件 安装 将项目目录解压缩到计算机上的任何文件夹 启动Ranorex Studio并打开解决方案文件 ImagebasedAutomation.rxsln 提示示例解决方案适用于Ranorex 8.0或更高版本。您需要同意8.2及更高版本的自动解决方案升级。 打开/关闭基于图像的自动化 在录制期间的任何时候，都可以在Recorder控制中心打开和关闭基于图像的自动化。 打开/关闭基于图像的自动化 Ranorex Recorder中基于图像的复选框（未选中，即关闭） 基于图像的自动化已打开 通过Recorder热键激活基于图像的自动化 在激活的记录器热键中按 I 键 基于图像的自动化已打开 为什么基于图像的自动化？ 在GUI软件的自动测试中使用基于图像的自动化的原因可能并不明显。本节将向您展示基于文本的自动化失败的至少一个原因，并且基于图像的自动化是解决方案。 实例准备 使用Ranorex演示应用程序观察基于图像的自动化的演示示例。在此示例中，我们使用Ranorex Recorder的即时录制功能。 基于图像的自动化示例 启动演示应用程序并选择基于图像的自动化作为工作环境 在Ranorex Studio Recorder的技术选择期间选择即时录制 基于文本的录制 在默认的基于文本的自动化模式下，在演示应用程序的日历视图中跟踪和记录三（3）个连续日期，并查看结果。 在基于文本的自动化中跟踪和记录日历日期 验证是否已打开默认的基于文本的自动化（即未选择基于图像的自动化） 记录（点击）日历的“24”，“25”和“26”三个日期会导致... 一个动作表，其中包含三个表示日历鼠标单击的相应操作项 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/":{"url":"Ranorex Studio advanced/Ranorex Remote/","title":"Ranorex 远程","keywords":"","body":"[译] Ranorex 远程[译] Ranorex 远程 原文地址 &#x1F449; Ranorex Remote @ translator : TaylorTaurus♋ translate time : 2018-7-5♋ update time : 2018-7-6 直接从Ranorex Studio，您可以将测试部署到远程计算机上，以便使用Ranorex 远程⇢执行测试。 这使您可以在不同的测试环境中并行执行测试-例如不同的操作系统，系统配置或被测系统的版本。在远程测试执行期间，⇢远程面板可让您随时了解测试性能，同时可以继续使用本地计算机。测试完成后，您将收到⇢通知报告已准备就绪。Ranorex远程使用⇢Ranorex 代理，可以⇢安装在网络中的物理或虚拟机上。直接从Ranorex Studio，您可以使用调控器为这些代理部署远程测试执行测试。 注意要执行测试，代理需要一个Ranorex运行时。你可以包括在测试运行时通过启用⇢复制运行时输出设置(推荐)或您可以下载并安装在所有机器上运行时你想要执行测试。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]Ranorex代理.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]Ranorex代理.html","title":"Ranorex 代理","keywords":"","body":"[译] Ranorex 代理[译] Ranorex 代理 原文地址 &#x1F449; Ranorex Agent @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 Ranorex Agent是一个独立的工具，支持远程测试执行。 要闻速览： Ranorex代理对多个请求进行排队，每次⇢执行一个测试。 Ranorex代理可以⇢安装在物理机和虚拟机上。 每台机器可以安装一个Ranorex代理。 运行Ranorex代理需要一个活动用户会话。 远程执行的测试功能齐全，包括鼠标和键盘操作。 Ranorex运行时许可证是远程测试执行所必需的。 启动代理程序时，它会自动从安装在网络中的许可证管理器请求。一旦代理关闭，许可将被释放。 当Ranorex Agent启动时，Windows系统托盘中将显示一个图标。 要打开Ranorex Agent窗口，只需点击此图标： 使用此图标的上下文菜单，您可以打开和关闭代理的窗口。选择“退出”关闭代理。关闭代理将释放许可证，关闭整个应用程序。在此操作之后，远程运行测试是不可能的。 Ranorex代理的窗口显示代理的作业队列以及代理的日志(包括技术细节)和代理的显示名。机器的主机名显示在标题栏中。 您还可以配置代理的设置。 有关此主题的更多信息，请访问此部分：⇢配置Ranorex代理 作业队列提供了当前执行和计划测试的概述。这些作业是通过它们各自的测试套件名称列出的，并且颁发者会看到正在运行Ranorex Studio的机器名称。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]Ranorex代理的安装和设置.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]Ranorex代理的安装和设置.html","title":"Ranorex 代理的安装和设置","keywords":"","body":"[译] Ranorex 代理的安装和设置安装Ranorex代理设置Ranorex代理[译] Ranorex 代理的安装和设置 原文地址 &#x1F449; Install and Set Up Ranorex Agent @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 完成这两个步骤来使用⇢Ranorex 代理： 安装Ranorex代理 设置Ranorex代理 安装Ranorex代理 下载安装包。或者您可以单击Ranorex Studio中的⇢远程面板中⇢添加Ranorex 代理链接。 接受许可协议中的条款，然后按“安装” 等待安装向导完成安装Ranorex代理 设置Ranorex代理 首次启动Ranorex代理时，会出现'首次运行向导'。按照说明指导您完成设置过程。 一旦设置完成，代理将打开。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]配置Ranorex代理.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]配置Ranorex代理.html","title":"配置 Ranorex 代理","keywords":"","body":"[译] 配置 Ranorex 代理[译] 配置 Ranorex 代理 原文地址 &#x1F449; Configure Ranorex Agent @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 打开Ranorex代理的主菜单的窗口如下图所示： 在代理窗口的右上角，打开主菜单: 更改显示名称 代理的显示名显示在代理窗口的左上角，在Ranorex Studio的远程面板中。如果您更改了代理的显示名，那么所有在代理列表中有此代理的人都必须从列表中删除具有前显示名的代理，并手动重新添加新的显示名。 更改许可证管理器 选择切换到另一个许可证管理器。 显示文件… 打开文件系统中的文件夹，该文件夹包含与代理相关的所有数据。 自动启动在登录 选择在登录到机器后自动启动Ranorex代理。 保持会话活动 此设置确保即使关闭远程会话，用户会话也保持解锁。 有关更多信息，请参阅⇢远程常见问题部分。 注意： 由于这种机制会使您的远程机器解锁，即使您断开了RDP会话，现在也禁用了基本的安全机制。请注意，由于系统安全性被禁用，您的远程机器现在可以轻松访问。 我们建议您不要在远程机器上存储敏感数据。 当结束活动的RDP会话并切换到未锁定的远程会话时，远程计算机可能会更改为其他屏幕分辨率。如果您的远程计算机是虚拟机，则可能会发生这种情况。 在这种情况下，可能会使用虚拟机的默认屏幕分辨率。 这可能会影响您的测试。 总在最前面 选中此选项可在所有其他窗口上显示代理的窗口。 退出 选择关闭代理并释放许可证。在Ranorex Studio的远程面板中，此代理将显示为无法访问。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]远程面板.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]远程面板.html","title":"远程面板","keywords":"","body":"[译] 远程面板[译] 远程面板 原文地址 &#x1F449; Remote Pad @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 在Ranorex Studio中，远程面板是将测试部署到Ranorex代理的管理中心。 首次安装Ranorex Studio或当您的代理清单为空时，将显示远程面板欢迎界面。要将代理添加到您的代理列表中，请按'添加Ranorex代理'并按照说明进行操作。 远程面板默认打开。如果它关闭，只需按下工具栏部分中的'View Remote'按钮，即可在Ranorex Studio中打开远程面板。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]添加Ranorex代理.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]添加Ranorex代理.html","title":"添加 Ranorex 代理","keywords":"","body":"[译] 添加 Ranorex 代理在你的代理列表中添加第一个代理在您的代理列表里添加其他代理[译] 添加 Ranorex 代理 原文地址 &#x1F449; Adding Ranorex Agents @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 请选择你想要了解更多任务的细节： 在你的代理列表中添加第一个代理 在代理列表中添加其他代理 在你的代理列表中添加第一个代理 如果您的⇢代理列表为空，则⇢远程面板将显示远程欢迎屏幕。 请点击“add Ranorex agent”，开始添加⇢Ranorex代理。 为了将Ranorex代理添加到您的代理列表中，代理必须安装在网络中的一台计算机上。 从第1步开始找到下载安装包的链接。 在此查找有关安装Ranorex Agent的详细信息：Ranorex代理的安装和设置 一旦成功安装了Ranorex代理，或者您的网络中已经有多个代理正在运行，请继续执行第2步以管理您的代理列表。 按照此链接了解如何将代理添加到您的代理列表：管理您的代理列表 在您的代理列表里添加其他代理 如果您的代理列表中已经有代理，请点击远程面板右上角的图标来管理您的代理列表。 按照此链接了解如何将代理添加到您的代理列表：管理您的代理列表 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]代理列表.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]代理列表.html","title":"代理列表","keywords":"","body":"[译] 代理列表管理你的代理列表[译] 代理列表 原文地址 &#x1F449; Agent List @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 代理列表是您可以获得代理概述，访问管理代理、代理⇢运行历史和进行测试的地方。 代理列出了他们的显示名称，状态信息和三个控件。 请在⇢执行测试一节中找到有关如何执行远程测试的详细信息。如果您想查看远程测试结果，请参阅运行历史部分。 管理你的代理列表 要从代理列表中添加或删除代理，请按远程面板右上角的图标。 '管理代理'视图可以有两种状态： 代理列表为空 代理列表含有代理 “我的代理”一节显示了您的代理列表中当前包含的所有代理。 使用“删除”按钮从该列表中删除代理。 请注意，此操作既不会删除代理本身，也不会删除代理上的数据，而只是从列表中删除代理。 您始终可以将以前删除的代理重新添加到代理列表中。 “网络中的可用代理”一节列出了网络中的所有自动发现代理。要向代理列表中添加代理，请按“添加代理”。 在此列表的最后一部分中，您可以手动搜索网络中不可自动发现的代理。输入安装代理的机器的名称或ip地址，以找到所需的代理。 如果找不到，请参阅用户手册中的Ranorex代理部分，并确保它已正确安装和配置。 如果即使安装和配置了代理程序也无法找到代理程序，请确保防火墙设置正确。如果仍然无法找到，请参阅故障排除部分。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]执行测试.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]执行测试.html","title":"执行测试","keywords":"","body":"[译] 执行测试[译] 执行测试 原文地址 &#x1F449; Execute Testst @ translator : TaylorTaurus♋ translate time : 2018-6-26♋ update time : 2018-7-6 注意要执行测试，代理需要Ranorex运行时。 您可以通过在设置中启用⇢复制运行时到输出（推荐），或者在要执行测试的所有机器上下载和安装运行时，将测试运行时包含在测试中。 首先，从顶部的下拉菜单中选择测试套件并运行要运行的配置。 然后，按代理名称旁边的运行按钮开始在此⇢Ranorex代理上执行测试。 测试将在远程机器上执行。您无需等待测试结束。将测试部署到远程计算机后，您可以立即继续使用本地计算机。 在远程测试执行期间，您将收到关于进度的信息。 按下红色停止按钮，可以中止远程测试运行。 远程测试成功执行后，您会收到最右侧按钮“打开运行历史记录”中显示的通知。您会在“运行历史记录”中看到许多未读项目。如果圆圈为灰色，则表示自上次访问运行历史以来没有发生错误。 如果运行历史中至少有一个未读项目出现错误状态，则该圆圈显示为红色。 代理可以为多个作业排队，队列中的项目数量显示在“Run”按钮的灰色圆圈中。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]运行历史.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]运行历史.html","title":"运行历史","keywords":"","body":"[译] 运行历史[译] 运行历史 原文地址 &#x1F449; Run History @ translator : TaylorTaurus♋ translate time : 2018-7-4♋ update time : 2018-7-6 “运行历史记录”列出了代理的所有已完成运行。您可以使用代理列表中每个代理旁边的最右侧按钮打开“运行历史记录”。 “运行历史记录”按降序显示已远程执行的所有测试。默认情况下，您将看到过去24小时内发送给代理运行的所有测试。 选择测试运行时，已执行的操作将显示在列表下方的详细信息视图中。 该列表显示测试运行的结果和测试套件的名称，包括测试执行完成时的时间戳。 绿色圆圈中的复选标记表示测试已成功执行，而执行失败则以红色圆圈中的白色十字突出显示。 远程执行测试的报告存储在已执行的代理的机器上。打开报告有三个选项：您可以双击所需的测试运行，右键单击测试运行以打开其上下文菜单并选择“打开报告”，或者按下右下角的下载按钮细节视图。要将报告保存到本地计算机或任何其他位置，请右键单击打开的报告以转到上下文菜单，然后选择“另存为...”。如果测试运行失败，则不会提供任何报告。 “运行历史记录”提供三个筛选选项：结果，所有权和时间跨度。测试运行的所有权是指Ranorex Studio正在运行的计算机的名称。 所有有权访问代理的人都可以删除测试运行。只需选择所需的测试运行并按删除键，或在上下文菜单中为所选的测试运行选择“删除”。删除测试运行时，将从代理中删除与此测试运行相关的所有信息。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]远程系统要求.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]远程系统要求.html","title":"远程系统要求","keywords":"","body":"[译] 远程系统要求Ranorex 代理防火墙配置[译] 远程系统要求 原文地址 &#x1F449; Remote System Requirements @ translator : TaylorTaurus♋ translate time : 2018-7-4♋ update time : 2018-7-6 Ranorex代理支持与Ranorex Studio相同的操作系统，并具有与其他Ranorex组件相同的软件和硬件要求。 有关详细信息，请参阅⇢系统要求部分。 Ranorex 代理防火墙配置 在运行Ranorex代理的系统上，必须将防火墙配置为允许访问TCP端口8081和29189以及UDP端口10000-10001。 注意要执行测试，代理需要Ranorex运行时。 您可以通过在设置中启用⇢复制运行时到输出（推荐），或者在要执行测试的所有机器上下载和安装运行时，将测试运行时包含在测试中。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]远程故障排除.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]远程故障排除.html","title":"远程故障排除","keywords":"","body":"[译] 远程故障排除[译] 远程故障排除 原文地址 &#x1F449; Remote troubleshooting @ translator : TaylorTaurus♋ translate time : 2018-7-5♋ update time : 2018-7-6 如果自动发现或手动搜索代理失败： 确保Ranorex代理程序在活动用户会话中运行。不要从运行Ranorex代理的计算机上注销用户。 确保Ranorex Studio正在运行，与运行Ranorex代理的计算机位于同一网络（子网）中。 仔细检查运行Ranorex代理的计算机上的⇢防火墙设置。 检查运行Ranorex代理的计算机上的Windows事件日志，以查找与Ranorex代理相关的条目。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Ranorex Remote/[译]远程常见问题.html":{"url":"Ranorex Studio advanced/Ranorex Remote/[译]远程常见问题.html","title":"远程常见问题","keywords":"","body":"[译] 远程常见问题我可以在虚拟机上安装Ranorex代理吗？我可以在同一台机器上安装多个Ranorex代理吗？Ranorex Remote需要哪种类型的许可证？在Ranorex代理上执行远程测试需要多少许可证？如何将设置部署到Ranorex代理？如果关闭远程会话，如何确保用户会话保持解锁状态？如何克服NAT问题[译] 远程常见问题 原文地址 &#x1F449; Remote FAQ @ translator : TaylorTaurus♋ translate time : 2018-7-5♋ update time : 2018-7-6 这些有关Ranorex Remote的常见问题是想要帮助您快速找到重要主题的答案。只需点击其中一个问题即可获得答案。 我可以在虚拟机上安装Ranorex代理吗？ 是的，Ranorex代理可以安装在虚拟机和物理机上。 我可以在同一台机器上安装多个Ranorex代理吗？ 一个Ranorex代理可以安装在一个操作系统中。 如果要在物理计算机上运行多个Ranorex代理，则必须在该计算机上设置更多操作系统。 Ranorex Remote需要哪种类型的许可证？ Ranorex代理使用通过Ranorex许可证管理器提供的一个Ranorex运行时许可证。 在Ranorex代理上执行远程测试需要多少许可证？ Ranorex代理在启动时获取Ranorex运行时许可证，并在代理关闭之前保留它。相同的许可证用于测试执行。Ranorex代理正在运行时，一个许可证被阻止 - 无论代理是空闲（没有执行测试）还是执行测试。 此外，代理执行的测试数量对使用的许可证数量没有影响。 如何将设置部署到Ranorex代理？ 在本地计算机上配置的设置，例如：技术插件设置，可以使用Ranorex解决方案部署到远程计算机。请按照以下步骤操作： 打开Windows资源管理器并导航到本地计算机上的%appdata%。 复制文件'RanorexConfig6.xml'。 打开你的测试套件项目的文件系统目录。 在此文件夹中粘贴“RanorexConfig6.xml”。 切换回Ranorex Studio并启用在Projects View中显示所有文件。配置文件应该在列表中可见。 在项目中包含配置文件。 打开文件的“属性”窗格。使用上下文菜单或按F4执行此操作。 将属性“复制到输出目录”更改为“PreserveNewest”。 使用此设置，配置文件将始终部署到Ranorex代理。 如果在此过程后更改任何设置，则必须手动更新此项目中的文件。 重复步骤1到4以执行此操作。 如果关闭远程会话，如何确保用户会话保持解锁状态？ Ranorex Remote需要一个活动的用户会话来在远程机器上运行测试。您可以使用远程桌面连接(RDP)连接到远程机器。只要这个远程连接是活动的，远程机器就被解锁，可以执行测试。如果断开RDP会话，您的远程机器将被锁定。由于在锁定模式下没有GUI可用，您的远程测试将失败。Ranorex 6.0.1及更高版本附带的Ranorex代理包括默认启用的“保持会话活动”设置。因此不需要更多操作，可在配置 Ranorex 代理一章中找到更多信息。即使您已在Ranorex 6.0中断开RDP会话，也要保持远程会话未锁定，请按照以下说明操作： 在远程计算机上创建批处理文件并插入以下代码： for /f \"skip=1 tokens=3 usebackq\" %%s in ( `query user %username%` ) do ( %windir%System32tscon.exe %%s /dest:console ) 将此批处理文件保存在远程计算机的桌面上并命名为：'KeepSessionOpen.bat'。 如果您需要断开RDP会话，现在只需使用管理员权限运行此批处理文件，您的远程计算机将保持解锁状态。 注意： 由于即使您已断开RDP会话，此机制也会使您的远程计算机保持解锁状态，因此现在禁用了基本的安全机制。 请注意，现在可以在禁用系统安全性的情况下轻松访问远程计算机。 我们建议您不要在远程计算机上存储敏感数据。 当结束活动RDP会话并切换到未锁定的远程会话时，远程计算机可能会更改为不同的屏幕分辨率。 如果您的远程计算机是虚拟机，则可能会发生这种情况。 在这种情况下，可能会使用虚拟机的默认屏幕分辨率。 这可能会影响您的测试。 如何克服NAT问题 如果安装了Ranorex Studio的计算机和具有Ranorex代理的计算机连接到不同的网络，则此代理可能不会自动显示在您的代理列表中，您可能无法使用IP地址手动添加它。 默认情况下，计算机没有路由信息来连接到自己网络之外的计算机。 要解决此问题，必须在网络之间的网关或每台计算机上配置网络路由。 下面，我们展示了一个示例，其中Ranorex Studio和Ranorex代理安装在连接到不同网络的计算机上，并提供了如何在它们之间创建网络路由的解决方案。 如上图所示，我们的示例网络以192.168.x.x开头。 一个具有网关192.168.2.1，另一个具有192.168.3.1。 两个网关共享子网192.168.1.x. 该子网具有连接到Internet的网关192.168.1.1。 网关192.168.3.1的网络包含两台计算机，其中一台运行在其上的三台虚拟机（VM）。 它们都有192.168.3.x IP地址。 在192.168.2.1网络上有一台路由器，只有两台计算机。 所有这些计算机都具有192.168.2.x IP地址。 如果从计算机“192.168.3.6”（VM C）ping“192.168.2.2”（PC 2），则请求将超时，除非您在网关上启用正确的路由。 假设192.168.3.6（VM C）运行的是Windows 7，请在192.168.3.6（VM C）上键入以下命令之一： route add 192.168.2.0 mask 255.255.255.0 192.168.1.2 metric 2 (add whole network to the route table) route add 192.168.2.2 mask 255.255.255.0 192.168.1.2 metric 2 (add single computer to the route table) 输入命令后，ping /通信将成功从192.168.3.6（VM C）转到192.168.2.2（PC 2），但192.168.2.2（PC 2）仍然无法ping 192.168.3.6（ VM C）。 有两种解决方法可以实现这两个网络之间的通信： 在网关上建立一条路线 在需要跨网络通信的计算机上设置路由 设置路由时请考虑网关防火墙，因为它们可能会阻止来自计算机的交叉流量。 如果是这种情况，您将需要网络管理员来代替在网关上设置路由，或者设置端口转发以允许通过防火墙的流量。 由于公司internet防火墙后面的大多数网关都具有桥梁的功能，因此在本地网络上没有多少内部通信受到防火墙的保护。 要检查连接是否有防火墙，请尝试“tracert 192.168.2.2”。 如果星号“*”出现在“跟踪路由”而不是IP地址，那么连接要么通过防火墙，要么被错误地定向到internet。 请注意，在此方案中已选择标准子网：255.255.255.0 您需要确认网关两侧的子网，并根据需要调整路由设置命令。 路由度量（命令中的最后一个数字）被分配给路由，并用于标识其优先级 - 1具有最高优先级。 通常，网络管理员根据路由中的跳数来确定路由器度量，因为跳数最少的路由通常是最好的。 由于我们示例中的路由包含两个跃点，因此我们的路由器度量标准为2。 注意：如果向其添加'-p'参数，则route命令只是持久的（它会在重启后保留）。 因此，您可以轻松地在没有风险的情况下尝试路由命令，如果您想要撤消它们，只需重新启动即可。 一旦找到了正确的路由，就可以在重启后使命令持久化。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio advanced/Maintenance mode/":{"url":"Ranorex Studio advanced/Maintenance mode/","title":"维护模式","keywords":"","body":"维护模式维护模式 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/":{"url":"Ranorex Studio expert/","title":"Ranorex Studio 专家教程","keywords":"","body":"[译] Ranorex Studio 专家教程本章结构如下[译] Ranorex Studio 专家教程 原文地址 &#x1F449; Ranorex Studio expert @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 本章包含专业知识主题，涉及Ranorex的自动化软件测试。面向有编程态度和面临高级或复杂测试挑战的用户。Ranorex提供了一个详细描述的编程接口。 映射动态ui元素的可能性是一个专家话题，用户代码库以及代码模块的概念同样也是。 本章结构如下 映射动态UI元素 RanoreXPath 中的正则表达式 用户代码库 代码模块 Ranorex Studio 集成开发环境 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Mapping dynamic UI elements/":{"url":"Ranorex Studio expert/Mapping dynamic UI elements/","title":"映射动态UI元素","keywords":"","body":"[译] 映射动态UI元素什么是RanoreXPath权重规则？如何添加你自己的RanoreXPath权重规则如何添加共享的RanorexXPath权重规则规则库[译] 映射动态UI元素 原文地址 &#x1F449; Mapping dynamic UI elements @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-10 如果软件是基于动态内容的，那么它通常是基于动态标识符的。 这可能会导致对象识别方面的问题，因为每次显示一个元素时都会新生成这些标识符。 克服这一挑战的一种方法是在记录测试场景之后手动调整存储库，这当然非常耗时。 处理动态内容的推荐方法是使用RanoreXPath权重规则来优化特定动态框架的对象识别。 什么是RanoreXPath权重规则？ 路径权值规则为满足一组已定义条件的特定功能设置特定属性的权值。权重将被用于构建RanoreXPath。高权重和且值不为空的属性用来标识UI元素。 RanoreXPath权重规则可以通过“RanoreXPath权重规则”编辑器(Settings -> Advanced -> Edit Path Weights’ or ‘Ranorex Spy -> Edit Path Weights’)访问。 通过设置对话框编辑RanoreXPath权重规则 通过Ranorex Spy编辑RanoreXPath权重规则 使用RanoreXPath权重规则可以帮助您自动创建健壮的存储库，这是健壮的测试自动化框架的基础。 如何添加你自己的RanoreXPath权重规则 你可以在博文[自动化测试和动态ID][1]中找到如何添加你自己的RanoreXPath权重规则的详细说明。 如果你想在Ranorex社区分享你的RanoreXPath权重规则，请将你的XML规则发送至[support@ranorex.com][2]并提供简要说明。 如何添加共享的RanorexXPath权重规则 从设置对话框打开“RanorexXPath权重规则”编辑器(Settings -> Advanced -> Edit Path Weights)。 复制下面的某个XML规则（CTRL> + A>, CTRL> + C>），通过按CTRL> + V>或使用上下文菜单将其粘贴到'RanoreXPath权重规则'对话框。 添加共享的规则 规则库 RxWinForms ControlNet11 Classnames RxWeb YUI (Yahoo User Interface Library) RxWeb JS Frameworks (ExtJS, Sencha, Ozone Widget ,...) RxWeb jQuery RxWeb ASP.net RxWeb GWT RxWeb MS Dynamics CRM RxWin32 Random Control IDs © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Regular expressions in RanoreXPath/":{"url":"Ranorex Studio expert/Regular expressions in RanoreXPath/","title":"RanoreXPath 中的正则表达式","keywords":"","body":"[译] RanoreXPath 中的正则表达式需要转义的字符[译] RanoreXPath 中的正则表达式 原文地址 &#x1F449; Regular expressions in RanoreXPath @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-10 正则表达式regex或regexp(有时称为rational表达式)在理论计算机科学和形式语言理论中是定义搜索模式的字符序列。 通常，这种模式被计算机软件中的字符串搜索算法用于字符串的“查找”或“查找和替换”操作。 Ranorex也使用这种语法表达式来匹配RanoreXPath定义。 有关正则表达式更全面的文档，请参阅相应的MSDN网站 &#x1F449; .NET 正则表达式 示例 示例 解释 button[@text~’sample[0-9]’] 匹配以下按钮元素：'sample0'，'sample1'，...'sample9'，'Mysample26' listitem[@text~’^sample’] 匹配以文本值为sample开头的所有元素 listitem[@text~’sample$’] 匹配以文本值为sample结尾的所有元素 listitem[@text~’gr(a|e)y’] 匹配文本值gray或grey listitem[@text~’^sample 123$’] 匹配'样本123'（使用反斜杠来规避特殊字符，例如空格） listitem[@text~’^(?i:MyTeXt)$’] 外部匹配正则表达式不区分大小写，例如 'mytext'，'MYTEXT'，'mYTeXT'，...或包含用户名和密码组合的数据库进行测试 需要转义的字符 以下是在正则表达式中使用前缀为反斜杠时需要转义的特殊字符。例如。当你想匹配文本'Sample。'（末尾有一个点）时，需要对点进行转义：'Sample.'。 字符 说明 · 点将匹配任何单个字符。例如'Sample.'匹配：Sample1、Samplex等 $ 美元符号将匹配字符串的结尾。表达式'abc $'只有abc在字符串末尾时才匹配 \\ 修改字符允许其一侧的任何表达式匹配目标字符串。'gr(a|e)y'的表达式可以与gray或grey匹配 * 星号表示表达式中星号左边的字符应该匹配零次或多次。例如'go*gle' 匹配：ggle、gogle、google、gooogle等 + 加号类似于星号，但表达式中+号左边必须至少有一个字符匹配。例如'go+gle'匹配：gogle、google、gooogle等 ? 问号(?)匹配左边的字符0或1次。例如'colo?r'匹配：color和colour ^ 匹配字符串的开头。表达式'^A'仅匹配在字符串开头的A () 括号影响正则表达式匹配的顺序 [] 包含一组字符的括号表明所包含的任何字符都可能与目标字符匹配 [^0-9] 左括号后面的插入符号有不同的含义。它用于排除括号内的其余字符以匹配目标字符串。[^0-9]的表达表明目标字符必须不是一个数字。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/User code library/":{"url":"Ranorex Studio expert/User code library/","title":"用户代码库","keywords":"","body":"[译] 用户代码库[译] 用户代码库 原文地址 &#x1F449; User code library @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/User code library/[译]集合和方法.html":{"url":"Ranorex Studio expert/User code library/[译]集合和方法.html","title":"集合和方法","keywords":"","body":"[译] 集合和方法将用户代码集合添加到项目中将用户代码方法添加到用户代码集合[译] 集合和方法 原文地址 &#x1F449; Collections and Methods @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 作为具有编程技能的开发人员或测试人员，您可以使用用户代码方法创建用户代码集合，然后可以在解决方案和团队中共享。 解决方案的用户代码集合中的所有用户代码方法都可立即在用户代码库中使用。 您可以在项目中创建多个用户代码集合。 将用户代码集合添加到项目中 在'项目'视图中选择项目 在主菜单中，选择 File > New > File 或是在上下文菜单中 Add > New Item 在打开的对话框中，选择“用户代码集合”并输入合适的文件名 代码文件将添加到项目中并打开。将自动生成具有属性“[UserCodeCollection]”的空类。只有具有此属性的类才会列在库中。 将用户代码方法添加到用户代码集合 将鼠标光标放在类的括号中。 打开上下文菜单，然后单击 \"nsert New User Code Method\"。 为新用户代码方法填写合适的方法名称，然后按确定。 创建新方法的存根。必须将所有用户代码方法归因于'[UserCodeMethod]'才能在用户代码库中使用。 编写新方法的代码。 更新摘要以提供合适的说明。该描述将在库中提供，并帮助您的同事找到他们正在寻找的方法。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/User code library/[译]使用用户代码库.html":{"url":"Ranorex Studio expert/User code library/[译]使用用户代码库.html","title":"使用用户代码库","keywords":"","body":"[译] 使用用户代码库在哪里可以找到用户代码库用户代码库是什么样子的?从用户代码库添加用户代码方法[译] 使用用户代码库 原文地址 &#x1F449; Using the User Code Library @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 在哪里可以找到用户代码库 您可以从操作表中直接访问用户代码库。只需单击菜单中的“添加新操作”即可从库中选择方法。 用户代码库是什么样子的? 在测试自动化解决方案中，所有集合及其方法都可以在用户代码库中获得，并以非命令的顺序显示。 选择集合或方法时，将自动显示其描述。 您正在寻找特定的集合或方法？然后，您可以使用列表上方的搜索和过滤功能。您输入的关键字将用于过滤方法名称，名称空间和描述的库内容。 从用户代码库添加用户代码方法 从列表中选择用户代码方法。 按“确认选择”按钮确认您的选择。 选定的用户代码方法将作为操作添加到录制中。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Code modules/":{"url":"Ranorex Studio expert/Code modules/","title":"代码模块","keywords":"","body":"[译] 代码模块创建代码模块在代码模块中使用控件库访问代码模块中的屏幕截图在代码模块中使用变量使用Setter方法访问存储库变量在测试用例中使用代码模块[译] 代码模块 原文地址 &#x1F449; Code modules @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 虽然只有智能操作、变量和用户代码功能的Ranorex录制足以创建健壮的测试自动化模块，但是编写纯粹的Ranorex自动化代码可能是有用的或更可取的。 在下一节中，您将了解如何创建一个新的代码模块，该模块将向KeePass应用程序添加新的凭据数据集的过程自动化测试。 创建代码模块 单击工具栏上的“添加代码模块”按钮创建一个新的代码模块。 或者，您可以使用Test Suite中的上下文菜单添加新的代码模块。 指定用于代码模块的名称 单击“创建”按钮后，新文件将添加到项目中，并在文件视图中自动打开。Ranorex Studio创建了一个新的测试模块类，其中包含一个“Run”方法，可以使用测试自动化代码进行扩展。 C# namespace KeePass { /// /// Description of AddCredentialEntry. /// [TestModule(\"03F5603B-0DDC-49AA-8C26-4D8088260C66\", ModuleType.UserCode, 1)] public class AddCredentialEntry : ITestModule { /// /// Constructs a new instance. /// public AddCredentialEntry() { // Do not delete - a parameterless constructor is required! } /// /// Performs the playback of actions in this module. /// /// You should not call this method directly, instead pass the module /// instance to the method /// that will in turn invoke this method. void ITestModule.Run() { Mouse.DefaultMoveTime = 300; Keyboard.DefaultKeyPressTime = 100; Delay.SpeedFactor = 1.0; } } } VB.NET Namespace KeePass ''' ''' Description of AddCredentialEntry. ''' _ Public Class AddCredentialEntry Implements ITestModule ''' ''' Constructs a new instance. ''' ' Do not delete - a parameterless constructor is required! Public Sub New() End Sub ''' ''' Performs the playback of actions in this module. ''' ''' You should not call this method directly, instead pass the module ''' instance to the method ''' that will in turn invoke this method. Private Sub ITestModule_Run() Implements ITestModule.Run Mouse.DefaultMoveTime = 300 Keyboard.DefaultKeyPressTime = 100 Delay.SpeedFactor = 1.0 End Sub End Class End Namespace 在代码模块中使用控件库 以同样的方式在录制模块中使用控件库来识别用于自动化的UI元素，您也可以在代码中使用它。只需将代表控件库的新私有成员添加到您的代码模块类，如下所示： C# public class AddCredentialEntry : ITestModule { // Repository object to access UI Elements MyFirstTestProjectRepository MyRepo = MyFirstTestProjectRepository.Instance; /// Constructs a new instance. public AddCredentialEntry() { // Do not delete - a parameterless constructor is required! } void ITestModule.Run() { Mouse.DefaultMoveTime = 300; Keyboard.DefaultKeyPressTime = 100; Delay.SpeedFactor = 1.0; // Click 'Add Entry' Button MainMenu MyRepo.MainForm.Edit.Click(); MyRepo.KeePass.AddEntry.Click(); // Set text fields MyRepo.AddEntry.TabSheetAddEntry.Title.TextValue = \"WordPressDemo\"; MyRepo.AddEntry.TabSheetAddEntry.UserName.TextValue = \"admin\"; MyRepo.AddEntry.TabSheetAddEntry.Password.TextValue = \"demo123\"; MyRepo.AddEntry.TabSheetAddEntry.Repeat.TextValue = \"demo123\"; MyRepo.AddEntry.TabSheetAddEntry.URL.TextValue = \"bitly.com/wp_demo\"; // Choose an icon MyRepo.AddEntry.TabSheetAddEntry.MBtnIcon.Click(); MyRepo.IconPicker.LI_Icon.Click(Location.CenterLeft); MyRepo.IconPicker.ButtonClose.Click(); // Set Expires MyRepo.AddEntry.TabSheetAddEntry.MBtnStandardExpires.Click(); MyRepo.KeePass.MI_Expires.Click(); // Save Credential Entry MyRepo.AddEntry.ButtonOK.Click(); } } VB.NET Public Class AddCredentialEntry Implements ITestModule ' Repository object to access UI Elements Private MyRepo As MyFirstTestProjectRepository = MyFirstTestProjectRepository.Instance ''' Constructs a new instance. ' Do not delete - a parameterless constructor is required! Public Sub New() End Sub Private Sub ITestModule_Run() Implements ITestModule.Run Mouse.DefaultMoveTime = 300 Keyboard.DefaultKeyPressTime = 100 Delay.SpeedFactor = 1.0 ' Click 'Add Entry' Button MainMenu MyRepo.MainForm.Edit.Click() MyRepo.KeePass.AddEntry.Click() ' Set text fields MyRepo.AddEntry.TabSheetAddEntry.Title.TextValue = \"WordPressDemo\" MyRepo.AddEntry.TabSheetAddEntry.UserName.TextValue = \"admin\" MyRepo.AddEntry.TabSheetAddEntry.Password.TextValue = \"demo123\" MyRepo.AddEntry.TabSheetAddEntry.Repeat.TextValue = \"demo123\" MyRepo.AddEntry.TabSheetAddEntry.URL.TextValue = \"bitly.com/wp_demo\" ' Choose an icon MyRepo.AddEntry.TabSheetAddEntry.MBtnIcon.Click() MyRepo.IconPicker.LI_Icon.Click(Location.CenterLeft) MyRepo.IconPicker.ButtonClose.Click() ' Set Expires MyRepo.AddEntry.TabSheetAddEntry.MBtnStandardExpires.Click() MyRepo.KeePass.MI_Expires.Click() ' Save Credential Entry MyRepo.AddEntry.ButtonOK.Click() End Sub End Class 注意：默认情况下，存储库的类名与项目视图中显示的存储库文件名（* .rxrep）相同。 现在，该类使用私有成员来引用存储库，以便在“Run”方法中重用一些对象（“Title”，“Username”，“Password”，“PasswordRepeat”和“URL”）。 根据存储库的结构，访问代码中的项可能会变得越来越复杂。为了降低复杂性-尤其是在多次使用UI元素时-您应该使用局部变量，而不是每次需要自动化UI元素时编码存储库的整个结构。 C# var ButtonOK = MyRepo.FormAdd_Entry.ButtonOK; ButtonOK.Click(); VB.NET Dim ButtonOK = MyRepo.FormAdd_Entry.ButtonOK ButtonOK.Click() 要创建如上面代码中所示的局部变量，只需将存储库浏览器中的元素直接拖放到代码中即可。 注意：如果存储库本身不是该类的一部分（例如，新创建的代码模块），则也会生成存储库的本地变量。 访问代码模块中的屏幕截图 从Ranorex 3.3开始，可以使用存储库项目的Info对象直接在代码中访问屏幕截图。 例如，如果您要将捕获的屏幕截图与测试中的应用程序的实际外观进行比较，这将非常有用。 注意如果您选择基于图像记录，将自动捕获屏幕截图。在此处获取更多信息：⇢基于图像的自动化。 控件库中捕获的截图 C# // get the screenshot from the repository Bitmap MyScreenshot = MyRepo.IconPicker.LI_IconInfo.GetScreenshot_Icon(); // create FindOptions with similarity set to 95% Imaging.FindOptions MyFindOptions = new Imaging.FindOptions(0.95); // compare the captured screenshot with the actual list item Validate.CompareImage(MyRepo.IconPicker.LI_Icon, MyScreenshot, MyFindOptions); VB.NET ' get the screenshot from the repository Dim MyScreenshot As Bitmap = MyRepo.IconPicker.LI_IconInfo.GetScreenshot_Icon() ' create FindOptions with similarity set to 95% Dim MyFindOptions As New Imaging.FindOptions(0.95) ' compare the captured screenshot with the actual list item Validate.CompareImage(MyRepo.IconPicker.LI_Icon, MyScreenshot, MyFindOptions) 注意：使用FindOptions，您可以设置“相似性”等自定义值。 此选项允许您定义要搜索的图像区域与屏幕截图相同的最小相似度，以便被视为匹配。 有关详细信息，请查看 ⇢基于图像的自动化。 在代码模块中使用变量 要使用代码模块中数据连接器提供的值，需要在代码中添加变量。使用上下文菜单项“插入模块变量”。 在代码模块中添加一个新变量 指定变量名称和默认值 通过添加新变量Ranorex Studio在当前光标位置插入新的代码片段。变量实现由公共属性和私有成员”组成。 C# string _varTitle = \"Wordpress Credentials\"; [TestVariable(\"9348A7E6-80B6-4A2B-9CBF-0276A236AA3E\")] public string varTitle { get { return _varTitle; } set { _varTitle = value; } } VB.NET Private _varTitle As String = \"Wordpress Credentials\" _ Public Property varTitle() As String Get Return _varTitle End Get Set _varTitle = value End Set End Property 现在为“用户名”，“密码”和“URL”创建其他变量。 所有模块变量将立即出现在模块浏览器中。 使用Setter方法访问存储库变量 要在通过代码模块访问控件库元素时将控件库变量绑定到外部数据，您必须创建一个新的模块变量来充当桥接器。您可以使用公共变量的setter方法来设置控件库变量。 存储库使用的变量(例如，KeePass的“添加条目对话框”上下文菜单中的菜单项的“varExpires”)可以通过存储库轻松访问，甚至可以通过代码访问。为了将这些变量绑定到外部数据(例如Excel文件中的一行)，您必须创建一个新的模块变量来充当外部数据和存储库变量之间的桥梁。遵循这种方法，显然最好将setter方法用于公共变量。每当设置该变量的值时，都会调用一个公共变量的setter方法。即为私有变量赋值，为公共属性保存信息。为了设置存储库变量，可以很容易地扩展这个方法。 前两个新模块变量“varExpires”和“varIconIndex”必须以与“varTitle”、“varPassword”相同的方式创建。之后，必须将一个简单的代码行插入到每个变量的setter方法中。此代码行用于将传递的值分配给存储库变量，并便于绑定到外部数据。 \\ C# string _varRepoIconIndex = \"1\"; [TestVariable(\"EF09BC93-3447-4AC2-9DEB-FE3D78ED5538\")] public string varRepoIconIndex { get { return _varRepoIconIndex; } set { _varRepoIconIndex = value; // Additionally set the Repository Variable in Setter-Method MyRepo.varIconIndex = _varRepoIconIndex; } } string _varRepoExpires = \"1 Year\"; [TestVariable(\"D0A54427-68FF-4B9D-B861-4882BCEC846B\")] public string varRepoExpires { get { return _varRepoExpires; } set { _varRepoExpires = value; // Additionally set the Repository Variable in Setter-Method MyRepo.varExpires = _varRepoExpires; } } VB.NET Private _varRepoIconIndex As String = \"1\" _ Public Property varRepoIconIndex() As String Get Return _varRepoIconIndex End Get Set _varRepoIconIndex = value ' Additionally set the Repository Variable in Setter-Method MyRepo.varIconIndex = _varRepoIconIndex End Set End Property Private _varRepoExpires As String = \"1 Year\" _ Public Property varRepoExpires() As String Get Return _varRepoExpires End Get Set _varRepoExpires = value ' Additionally set the Repository Variable in Setter-Method MyRepo.varExpires = _varRepoExpires End Set End Property 因此，Excel文件中的两列可以绑定到这些模块变量。 此绑定会导致在测试用例中为每次迭代设置变量。 设置这些变量时，扩展功能还会设置存储库变量，以确保在我们的示例中使用和单击正确的图标。 在测试用例中使用代码模块 上面实现的代码模块现在可以由测试用例运行。 添加一个新的测试用例（'TC_AddEntryFromCode'）到您的测试套件并重用已有的模块来启动KeePass，在开始时登录并在测试用例结束时验证，删除，保存和关闭它。 您可以使用拖放操作将新创建的代码模块快速插入测试用例。 将代码模块拖放到测试用例中并将其与录制模块组合 现在，您可以使用新的测试用例重用在数据驱动测试期间创建的现有数据连接器。 通过从下拉列表中选择项目来重用现有数据连接器 将新创建的变量绑定到数据连接器的列，即Excel文件中的列 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/":{"url":"Ranorex Studio expert/Ranorex Studio IDE/","title":"Ranorex Studio 集成开发环境","keywords":"","body":"[译] Ranorex Studio 集成开发环境[译] Ranorex Studio 集成开发环境 原文地址 &#x1F449; Ranorex Studio IDE @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-10 Ranorex Studio是用C＃和VB.Net编写的.Net框架应用程序的集成开发环境。 Ranorex Studio基于开源工具SharpDevelop。 从左侧菜单中选择一个章节，以获取有关相应主题的更多详细信息。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]创建.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]创建.html","title":"创建","keywords":"","body":"[译] 创建[译] 创建 原文地址 &#x1F449; Create @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 在Ranorex解决方案中，可以创建不同类型的项目。 '新建项目'对话框 名称 说明 Ranorex test suite 一个项目，含有Ranorex测试套件，可能包含录制模块和代码模块。开始使用Ranorex Studio，这可能是您的首选 Ranorex test suite module library 一个项目，包含可以共享和重用的录制和代码模块 Ranorex class library 用于创建在其他应用程序中使用的类的项目 Ranorex console application 一个创建命令行应用程序的项目 Ranorex Windows application 使用Windows界面创建应用程序的项目 Ranorex Studio © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]构建.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]构建.html","title":"构建","keywords":"","body":"[译] 构建[译] 构建 原文地址 &#x1F449; Build @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 创建应用程序后，可以使用“Build”菜单构建它。 在此菜单中，可以构建，重建或清理整个解决方案或解决方案中的特定项目。 构建消息将显示在“输出”窗口中。 “输出”窗口 构建错误和警告将显示在“错误”窗口中。“错误”窗口 可以在“项目选项”对话框中定义项目特定设置，可以从“项目”菜单访问该对话框。 打开“项目选项”菜单项 要命名其中一些设置，您可以在“应用程序”选项卡中设置生成的程序集的名称或类型。 “项目选项” “应用程序”选项卡 您还可以在“编译”选项卡中设置目标CPU和框架或输出路径。 “项目选项” “编译”选项卡 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]运行.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]运行.html","title":"运行","keywords":"","body":"[译] 运行[译] 运行 原文地址 &#x1F449; Run @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 成功构建项目后，可以使用或不使用调试器从“调试”菜单执行该项目。 “调试”菜单 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]添加新项目.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]添加新项目.html","title":"添加新项目","keywords":"","body":"[译] 添加新项目[译] 添加新项目 原文地址 &#x1F449; Adding new items @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 Ranorex Studio提供了几个不同的模板，可以通过“项目”菜单或“项目浏览器”上下文菜单添加到项目中。 通过“项目”菜单添加新项目 通过“Project Explorer”上下文菜单添加新项目 “新建文件”对话框 除了Ranorex特定文件之外 代码模块 模块组 录制模块 控件库 编程语言特定的文件 类文件 接口 结构体 形状 也可以添加下述文件 空的资源文件 文本文件 在添加表单之后，可以使用表单设计器来可视化地设计UI，如发表在SharpDevelopment社区博客上的“可视化设计表单”一文中明确描述的那样。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]解决方案资源管理器.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]解决方案资源管理器.html","title":"解决方案资源管理器","keywords":"","body":"[译] 解决方案资源管理器[译] 解决方案资源管理器 原文地址 &#x1F449; Solution explorer @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 除了向项目添加新项目外，“解决方案资源管理器”还允许执行一些其他助手选项来编辑您的解决方案。 例如，通过将记录模块与用户代码模块分开来添加文件夹以组织项目。 在解决方案浏览器中将新文件夹添加到项目 此外，您还可以删除未使用的文件。此功能尤其适用于删除过期的日志文件。或者，可以从项目中排除未使用的文件，而不从解决方案中删除它们。 从项目中删除文件 也可以重新定义解决方案的“启动项目”。 将项目设置为启动项目 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]代码补全.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]代码补全.html","title":"代码补全","keywords":"","body":"[译] 代码补全[译] 代码补全 原文地址 &#x1F449; Code completion @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 Ranorex支持在您键入时代码补全。 Ranorex中的代码补全 有关其工作原理的更多详细信息，请参阅SharpDevelop社区博客上发布的代码补全一文。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]调试.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]调试.html","title":"调试","keywords":"","body":"[译] 调试[译] 调试 原文地址 &#x1F449; Debugging @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 Ranorex提供了直接在开发环境中调试代码的可能性。 要启用调试器，请按工具栏中的“启用调试”按钮。 开启调试 要使调试器停在代码中的特定位置，可以设置断点。 设置断点可以使用下述两种方法 - 通过单击要设置的行的左边距 新增断点 - 通过将光标放在要添加断点的行上，打开“调试”菜单并选择“开启断点”。 开启断点 通过设置断点，将在空白处添加一个红色圆圈，代码行将突出显示为红色。可以以添加断点的方式删除断点。 在设置断点之后，调试器可以通过执行您的应用程序来启动，如章节《运行》所述。 应用程序将启动，Ranorex Studio将切换到“调试布局”，这将导致“调试器”菜单和工具栏中出现以下菜单项: 菜单项 说明 Continue debugging 继续执行 Stop process 强制停止进程 Step over 在当前行执行语句但不会进入 Step into 在当前行上执行语句，并在方法内的第一行代码处停止 Step out 完成执行当前方法并返回其父方法 调试菜单项 调试工具栏项 要跳过几行代码并继续在特定行上调试，可以通过右键单击该行并从上下文菜单中选择“设置当前语句”来选择上下文菜单项“设置当前语句”。 “设置当前语句”上下文菜单 在暂停模式下，可以诊断各个对象的实际状态。 可以在子菜单“调试”中激活以下窗口，该子菜单是“视图”菜单的一部分。 调试子菜单 菜单名称 说明 Callstack 显示当前在堆栈上的方法调用 Local variables 显示当前正在执行的函数中定义的变量，传递给当前函数的参数以及定义函数的类的字段和属性 Watch 显示添加到监视列表的所有表达式。右键单击窗口，从上下文菜单中选择“添加”并输入表达式，即可添加表达式。也可以通过在代码中选择表达式并将它们拖到“监视”窗口中来添加表达式。 除了不同的视图，还可以使用在鼠标移动时弹出的工具提示直接在代码中诊断单个对象。 工具提示 注意如果在运行Ranorex Studio的计算机上安装了Visual Studio 2010，则调试可能会很慢。要解决此问题，建议在注册表中搜索键“LowLevelHooksTimeout”并删除所有匹配项 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]代码转换.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]代码转换.html","title":"代码转换","keywords":"","body":"[译] 代码转换[译] 代码转换 原文地址 &#x1F449; Code conversion @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 使用Ranorex Studio，可以将单个代码文件以及整个项目从C＃转换为VB.NET，反之亦然。 这可以通过右键单击Project Explorer中的特定元素并从上下文菜单中选择“转换”来执行。 将整个项目从C＃转换为VB.NET © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]代码导航.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]代码导航.html","title":"代码导航","keywords":"","body":"[译] 代码导航[译] 代码导航 原文地址 &#x1F449; Code navigation @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 Ranorex Studio支持多种功能，可实现直观，快速的代码导航。更多详细信息可以在SharpDevelop社区博客上发布的代码导航文章中找到。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]代码生成.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]代码生成.html","title":"代码生成","keywords":"","body":"[译] 代码生成[译] 代码生成 原文地址 &#x1F449; Code generation @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 Ranorex Studio可以帮助您节省时间，为您提供自动生成的代码和代码模板，如SharpDevelop社区博客上发布的代码生成一文中所述。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio expert/Ranorex Studio IDE/[译]重构.html":{"url":"Ranorex Studio expert/Ranorex Studio IDE/[译]重构.html","title":"重构","keywords":"","body":"[译] 重构[译] 重构 原文地址 &#x1F449; Refactoring @ translator : TaylorTaurus♋ translate time : 2018-7-10♋ update time : 2018-7-10 Ranorex Studio支持几种重构代码的机制。 更多详细信息可以在SharpDevelop社区博客上发布的Refactoring一文中找到。 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Web and mobile testing/":{"url":"Web and mobile testing/","title":"网页和移动测试","keywords":"","body":"[译] 网页和移动测试[译] 网页和移动测试 原文地址 &#x1F449; Web and mobile testing @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Web and mobile testing/Web testing/":{"url":"Web and mobile testing/Web testing/","title":"网页测试","keywords":"","body":"[译] 网页测试[译] 网页测试 原文地址 &#x1F449; Web testing @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Web and mobile testing/Endpoints/":{"url":"Web and mobile testing/Endpoints/","title":"端点","keywords":"","body":"[译] 端点[译] 端点 原文地址 &#x1F449; Endpoints @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Web and mobile testing/Mobile testing/":{"url":"Web and mobile testing/Mobile testing/","title":"移动测试","keywords":"","body":"[译] 移动测试[译] 移动测试 原文地址 &#x1F449; Mobile testing @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Web and mobile testing/Android testing/":{"url":"Web and mobile testing/Android testing/","title":"Android 测试","keywords":"","body":"[译] Android 测试[译] Android 测试 原文地址 &#x1F449; Android testing @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Web and mobile testing/iOS testing/":{"url":"Web and mobile testing/iOS testing/","title":"iOS 测试","keywords":"","body":"[译] iOS 测试[译] iOS 测试 原文地址 &#x1F449; iOS testing @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/":{"url":"Interfaces and connectivity/","title":"接口和连接","keywords":"","body":"[译] 接口和连接[译] 接口和连接 原文地址 &#x1F449; Interfaces and connectivity @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Ranorex Instrumentation Wizard/":{"url":"Interfaces and connectivity/Ranorex Instrumentation Wizard/","title":"Ranorex 仪表向导","keywords":"","body":"[译] Ranorex 仪表向导[译] Ranorex 仪表向导 原文地址 &#x1F449; Ranorex Instrumentation Wizard @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Technology instrumentation/":{"url":"Interfaces and connectivity/Technology instrumentation/","title":"技术仪器","keywords":"","body":"[译] 技术仪器[译] 技术仪器 原文地址 &#x1F449; Technology instrumentation @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/TestRail integration/":{"url":"Interfaces and connectivity/TestRail integration/","title":"TestRail 集成","keywords":"","body":"[译] TestRail 集成[译] TestRail 集成 原文地址 &#x1F449; TestRail integration @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Source control and revision control/":{"url":"Interfaces and connectivity/Source control and revision control/","title":"源码控制和修订控制","keywords":"","body":"[译] 源码控制和修订控制[译] 源码控制和修订控制 原文地址 &#x1F449; Source control and revision control @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Continuous integration/":{"url":"Interfaces and connectivity/Continuous integration/","title":"持续集成","keywords":"","body":"[译] 持续集成[译] 持续集成 原文地址 &#x1F449; Continuous integration @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Visual Studio integration/":{"url":"Interfaces and connectivity/Visual Studio integration/","title":"Visual Studio 集成","keywords":"","body":"[译] Visual Studio 集成[译] Visual Studio 集成 原文地址 &#x1F449; Visual Studio integration @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Selenium Webdriver integration/":{"url":"Interfaces and connectivity/Selenium Webdriver integration/","title":"Selenium Webdriver 集成","keywords":"","body":"[译] Selenium Webdriver 集成[译] Selenium Webdriver 集成 原文地址 &#x1F449; Selenium Webdriver integration @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/XCOPY deployment/":{"url":"Interfaces and connectivity/XCOPY deployment/","title":"XCOPY 部署","keywords":"","body":"[译] XCOPY 部署[译] XCOPY 部署 原文地址 &#x1F449; XCOPY deployment @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Ranorex on a remote desktop/":{"url":"Interfaces and connectivity/Ranorex on a remote desktop/","title":"远程桌面的 Ranorex","keywords":"","body":"[译] 远程桌面的 Ranorex[译] 远程桌面的 Ranorex 原文地址 &#x1F449; Ranorex on a remote desktop @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Interfaces and connectivity/Plugins/":{"url":"Interfaces and connectivity/Plugins/","title":"插件","keywords":"","body":"[译] 插件[译] 插件 原文地址 &#x1F449; Plugins @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/":{"url":"Ranorex Studio system details/","title":"Ranorex Studio 系统详情","keywords":"","body":"[译] Ranorex Studio 系统详情[译] Ranorex Studio 系统详情 原文地址 &#x1F449; Ranorex Studio system details @ translator : TaylorTaurus♋ translate time : 2018-7-6♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/Licensing/":{"url":"Ranorex Studio system details/Licensing/","title":"证书","keywords":"","body":"[译] 证书[译] 证书 原文地址 &#x1F449; Licensing @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/Settings and configuration/":{"url":"Ranorex Studio system details/Settings and configuration/","title":"设置和配置","keywords":"","body":"[译] 设置和配置[译] 设置和配置 原文地址 &#x1F449; Settings and configuration @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/Settings and configuration/[译]Ranorex录制器设置.html":{"url":"Ranorex Studio system details/Settings and configuration/[译]Ranorex录制器设置.html","title":"Ranorex录制器设置","keywords":"","body":"[译] Ranorex 录制器设置[译] Ranorex 录制器设置 原文地址 &#x1F449; Ranorex Recorder settings @ translator : TaylorTaurus♋ translate time : 2018-7-6♋ update time : 2018-7-6 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/System requirements/":{"url":"Ranorex Studio system details/System requirements/","title":"系统要求","keywords":"","body":"[译] 系统要求[译] 系统要求 原文地址 &#x1F449; System requirements @ translator : TaylorTaurus♋ translate time : 2018-7-6♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/64-bit platforms/":{"url":"Ranorex Studio system details/64-bit platforms/","title":"64位平台","keywords":"","body":"[译] 64位平台[译] 64位平台 原文地址 &#x1F449; 64-bit platforms @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Ranorex Studio system details/Silent installation/":{"url":"Ranorex Studio system details/Silent installation/","title":"静默安装","keywords":"","body":"[译] 静默安装[译] 静默安装 原文地址 &#x1F449; Silent installation @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Hands-on application topics/":{"url":"Hands-on application topics/","title":"实践应用主题","keywords":"","body":"[译] 实践应用主题[译] 实践应用主题 原文地址 &#x1F449; Hands-on application topics @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Hands-on application topics/Solutions to common problems/":{"url":"Hands-on application topics/Solutions to common problems/","title":"常见问题的解决方案","keywords":"","body":"[译] 常见问题的解决方案[译] 常见问题的解决方案 原文地址 &#x1F449; Solutions to common problems @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Hands-on application topics/Best practices/":{"url":"Hands-on application topics/Best practices/","title":"最佳实践","keywords":"","body":"[译] 最佳实践[译] 最佳实践 原文地址 &#x1F449; Best practices @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Hands-on application topics/Code examples/":{"url":"Hands-on application topics/Code examples/","title":"代码示例","keywords":"","body":"[译] 代码示例[译] 代码示例 原文地址 &#x1F449; Code examples @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "},"Hands-on application topics/Ranorex Automation Helpers/":{"url":"Hands-on application topics/Ranorex Automation Helpers/","title":"Ranorex 自动化助手","keywords":"","body":"[译] Ranorex 自动化助手[译] Ranorex 自动化助手 原文地址 &#x1F449; Ranorex Automation Helpers @ translator : TaylorTaurus♋ translate time : 2018-7-8♋ update time : 2018-7-8 © 2018 ranorex.xyz            updated: 2018-10-07 "}}